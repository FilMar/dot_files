vid
/exit
exit
git status | describe
git status; git status
git status && git status
git status and git status
clera
clear
warp
vim
exit
ls
la
^ls
^la
la
ls
ls | table
ls | to json
ls
vid
warp
vi
vid
ls
:wq
ciao come va?
vid
fd -t d 2>/dev/null 
fd -t d
cd 
fd -t d
warp
curl -sS https://starship.rs/install.sh | sh
exit
warp
cd hypr_files/
cd ..
ls
la
ls
ls | to json
clear
ls
la
vid
exit
warp
exit
warp
perfetto
clear
claude --continue
la
ls 
ls -la
la
exit
la
la | order-by modified
la | sort modified
la | sort 
la | sort size
la | sort-by size
la | sort-by modified
la | sort-by modified --reverse
la | sort-by modified --reverse | <\n>
clear
vid
exit
ls
la
ls
warp
git status
git status | describe
git status | table 
git branch
git branch --merged
warp
git branch
git log
git log | lines
git log | lines | split column 
git log | lines | split column ":"
cler
clear
warp
ls
la
ls
multiverse 
multiverse query "select * from locations"
claude
warp
clear
ls
multiverse query "select * from locations"
warp
multiverse query "select * from locations"
ls
multiverse query "select * from locations"
multiverse query "select * from locations" 
claude --continue
cargo install --path .
multiverse query "select * from locations" 
multiverse query "select * from locations" | from json 
multiverse query "select * from locations" | from json | table
claude --continue
cargo install --path .
warp
ls
multiverse query "select * from locations" | from json | table
multiverse query "select * from locations"
multiverse query "select * from locations" | where metadata.condition = "Completamente mineralizzate"
multiverse query "select * from locations" | where metadata = "Completamente mineralizzate"
multiverse query "select * from locations" | from json
multiverse query "select * from locations" | from json | to csv
multiverse query "select * from locations" | from json | to yaml
multiverse query "select * from locations" | from json | table
multiverse query "select * from locations" | from json
warp
ls
claude --continue
cargo test
warp
ls
multiverse query "select * from locations" | from json
multiverse world info
multiverse character info
multiverse character list
multiverse location list
multiverse location info campi_minatori
warp
vid
warp
gitu
warp
gitu
clear
vim
vid
warp
vid
warp
clera
clear
warp
multiverse query "select * from locations" | from json
multiverse query "select * from locations"
multiverse query "select * from locations" | from json
ciao
vid
clear
warp
ls
ls | to json
ls | to json | to yaml
ls 
ls | where size=66.3
ls | where size = 66.3kb
ls | sort-by size
ls | sort-by size | select type
https emotion-test.eu/api/towers
https emotion-test.eu/api/towers | to json
https emotion-test.eu/api/towers | from json 
https emotion-test.eu/api/towers | from json | select is_european
https emotion-test.eu/api/towers | from json | where max_power = 100
https emotion-test.eu/api/tower-plugs
https emotion-test.eu/api/tower-plugs | from json
https emotion-test.eu/api/tower-plugs | from json | reverse
https emotion-test.eu/api/tower-plugs | from json | where status = Occupied
https emotion-test.eu/api/tower-plugs | from json | where status == Occupied
https emotion-test.eu/api/tower-plugs | from json | where status == Occupied | to json
https emotion-test.eu/api/tower-plugs | from json | where status == Occupied | to yaml
https emotion-test.eu/api/tower-plugs | from json | where status == Occupied | to yaml | save plug.json
vid
multiverse query "select * from locations"
warp
la
multiverse ls
multiverse --help
vid
multiverse query "select * from locations"
multiverse query "select * from locations" | from json
multiverse query "select * from locations" | from json | where status == Active
multiverse query "select * from locations" | from json | where row.status == Active
multiverse query "select * from locations" | from json | where rows.status == Active
multiverse query "select * from locations" | from json | get status |<\n>
multiverse query "select * from locations" | from json | get status 
multiverse query "select * from locations" | from json | get rows
multiverse query "select * from locations" | from json | get rows.status
multiverse query "select * from locations" | from json | select rows
multiverse query "select * from locations" | from json | get rows
multiverse query "select * from locations" | from json | get rows | where status == Active
exit
top
clear
ps
htop
ps
ps | sort-by mem
ip addr
ip addr | from text
ip addr | from 
ip addr | from raw
ip addr | autodetect
ip addr | detect lines
ps | explore
ls 
ls | inspect
warp
:w
clear
s
ghostty
https emotion-test.eu/new-api/tower-plugs | from json | where status == Occupied | to yaml | save plug.json
https emotion-test.eu/new-api/towers
https emotion-test.eu/api/towers
https emotion-test.eu/new-api/towers
warp
vid
warp
ls
la
vid
clear
claude
vid
warp
ls
la
claude
eww 
eww daemon
claude
eww daemon
clear
eww open launcher
ls
ls | where name == wired
exit
warp
ls
la
claude
multiverse query "select * from episodes join character_episode_relations as c on episodes.id == c.character<\n>"
multiverse query "select * from episodes join character_episode_relations as c on episodes.id == c.from_id"
claude
gitu
with-env { CIAO: "merluzzo"  }
with-env { CIAO: "merluzzo"  }{$env.CIAO<\n>}
with-env { CIAO: "merluzzo"  }{$env.CIAO}
with-env { CIAO: "merluzzo"  }{$CIAO}
with-env { CIAO: "merluzzo"  }
warp
clear
vid
$env.home
vid
warp
$HOME
$home
$env.home
$($env.home)
vid
warp
vid
claude
chsh -s /usr/bin/zsh
clear
vid
warp
ls
warp
ls
vid
ls
warp
vid
uv run swap-env --to-prod ../ocpp_manager/ocpp_stack.yml 
uv
warp
vid
uv
warp
uv
uv run swap-env --to-prod ../ocpp_manager/ocpp_stack.yml 
warp
uv run swap-env --to-prod ../ocpp_manager/ocpp_stack.yml > ocpp.yml
vid
uv run swap-env --to-prod ../ocpp_manager/ocpp_stack.yml | file ocpp.yml
ls
uv
ls
uv run swap-env --to-prod ../ocpp_manager/ocpp_stack.yml | file ocpp.yml
touch ocpp.yml
uv run swap-env --to-prod ../ocpp_manager/ocpp_stack.yml | file ocpp.yml
ls
vi
vid
uv run swap-env --to-prod ../ocpp_manager/ocpp_stack.yml --help
uv run swap-env --to-prod ../ocpp_manager/ocpp_stack.yml --suffix .prod
vid
ls
vid
warp
vid
warp
vid
warp
ls
uv
exit
$env.path
$env.home
warp
vid
warp
vid
warp
ls
vid
warp
ls
vid
warp
ls
vid
vi
vid
:wq
warp
vid
warp
ls
uv 
szh
uv
https emotion-test.eu/new-api/towers
zsh
zsh
rp
warp
ls
clear
warp
vid
warp
ls
claude
clear
$env.home
$env.path
$env.
$env
$env.CONFIG_HOME
clear
ls
claude --continue
vid
warp
clera
clear
ls
warp
:q
clera
warp
zs
zsh
warp
vid
claude --continue
clera
clear
d
df
d
ciao
warp
alacritty migrate
warp
python scripts/focus_mode.py
claude --continue
warp
vid
warp
ping 10.137.92.80
ssh pi@10.137.92.80
ssh pi@10.137.92.80 -23
ssh pi@10.137.92.80 -p 23
ssh pi@10.137.92.80
ssh pi@10.137.92.80 -p 23
clera
clear
ssh pi@10.137.92.80 -p 23
ssh pi@10.137.92.80 
ping 10.137.92.80
clear
warp
vid
ping 10.137.92.80
warp
